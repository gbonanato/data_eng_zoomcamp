services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data  # This is where the data is stored
    ports:
      - "5432:5432"
    networks:
      - airflow_network

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"  # You can access pgAdmin at http://localhost:5050
    depends_on:
      - postgres
    networks:
      - airflow_network

  airflow:
    image: apache/airflow:2.5.1
    environment:
      &airflow-common-env
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW_FERNET_KEY}
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    volumes:  # These volumes are bind mounts.
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    networks:
      - airflow_network
    command: >
      bash -c "airflow db init && airflow users create --username admin --password admin --firstname G --lastname Bona --email admin@admin.com --role Admin && airflow webserver & airflow scheduler"
    # This will initialize the DB, then start the webserver and scheduler. Maybe delete the initialize db.
    # Also creates user and password.

networks:
  airflow_network:
    driver: bridge

# Necessary to declare docker managed volumes in docker compose to create them 
volumes:
  postgres_data:
